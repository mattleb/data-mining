knitr::opts_chunk$set(fig.height=4, fig.width=6, warning = F)
# constants for homework assignments
hw_num <- 3
hw_due_date <- "28 October, 2018"
library(survey)
knitr::opts_chunk$set(fig.height=4, fig.width=6, warning = F)
# constants for homework assignments
hw_num <- 3
hw_due_date <- "28 October, 2018"
# Notice that we hide the code and the results here
# Using `include=F` in the chunk declaration.
hd_data <- read.csv("Framingham.dat")
str(hd_data)
### Renames, setting the variables with correct natures...
names(hd_data)[1] <- "HD"
hd_data$HD <- as.factor(hd_data$HD)
hd_data$SEX <- as.factor(hd_data$SEX)
str(hd_data)
#tail(hd_data, 1)    # The last row is for prediction
hd_data.new <- hd_data[1407,] # The female whose HD will be predicted.
hd_data <- hd_data[-1407,]  # take out the last row
hd_data.f <- na.omit(hd_data)
# we use echo = F to avoid showing this R code
table(hd_data$HD) # HD: 311 of "0" and 1095 "1"
# using the comment="     ", we get rid of the ## in the output.
summary(hd_data.f)
set.seed(50)
sample.data <- hd_data.f[sample(1:1393, 5), c("HD", "SBP")]
sample.data
mle.sample <- glm(HD~SBP, sample.data, family=binomial(logit))
summary(mle.sample)
#calculated probability
exp(-24.57)/{1+exp(-24.57)}
fit1 <- glm(HD~SBP, hd_data.f, family=binomial)
summary(fit1)
summary(fit1.1)
fit1.2 <- glm(HD~SBP + SEX, hd_data.f, family=binomial)
summary(fit1.2)
fit1.3 <- glm(HD~SBP + DBP, hd_data.f, family=binomial)
summary(fit1.3)
fit1.4 <- glm(HD~SBP + CHOL, hd_data.f, family=binomial)
summary(fit1.4)
summary(fit1.4)
fit1.5 <- glm(HD~SBP + DBP, hd_data.f, family=binomial)
fit1.5 <- glm(HD~SBP + DBP, hd_data.f, family=binomial)
summary(fit1.5)
fit1.6 <- glm(HD~SBP + FRW, hd_data.f, family=binomial)
summary(fit1.6)
fit1.7 <- glm(HD~SBP + CIG, hd_data.f, family=binomial)
summary(fit1.7)
#Based on AIC values (lowest is best), Sex is the most important variable to add. Adding it to the model:
fit2 <- glm(HD~SBP + SEX, hd_data.f, family=binomial)
summary(fit2)
## How to control the summary(fit2) output to cut some junk?
## We could use packages: xtable or broom.
library(xtable)
options(xtable.comment = FALSE)
fit2 <- glm(HD~SBP + SEX, hd_data.f, family=binomial)
xtable(fit2)
chi_sq <- 1469.3 - 1373.8
pchisq(chi_sq, 1, lower.tail=FALSE)
library(survey)
install.packages(survey)
library(survey)
install.packages(survey)
install.packages(survey)
install.packages("survey"")
install.packages("survey")
install.packages(survey)
install.packages('survey')
library(survey)
regTermTest(fit2, "SEX")
fit_back1 <- glm(HD~.,hd_data.f, family=binomial)
summary(fit_back1)
fit_back2 <- glm(HD~. - DBP,hd_data.f, family=binomial)
summary(fit_back2)
fit_back1 <- glm(HD~. - DBP - FRW,hd_data.f, family=binomial)
summary(fit_back1)
```{r}
fit_back3 <- glm(HD~. - DBP - FRW - CIG, hd_data.f, family=binomial)
summary(fit_back3)
des_mat <- model.matrix(HD ~.+0, hd_data.f)
des_mat <- data.frame(des_mat, hd_data.f$HD)
head(des_mat)
str(des_mat)
library(bestglm)
install.packages('bestglm')
library(bestglm)
