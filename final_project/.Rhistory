knitr::opts_chunk$set(echo = TRUE,
tidy = TRUE, fig.width = 7, fig.height = 4,
fig.align='left', dev = 'pdf')
if(!require("pacman")) install.packages("pacman")
if(!require("pROC")) install.packages("pROC")
pacman::p_load(dplyr, ggplot2, glmnet, car, corrplot)
library(pROC)
data.main<- read.csv("insurance_dataset.csv", header = T)
str(data.main)
knitr::opts_chunk$set(echo = TRUE,
tidy = TRUE, fig.width = 7, fig.height = 4,
fig.align='left', dev = 'pdf')
if(!require("pacman")) install.packages("pacman")
if(!require("pROC")) install.packages("pROC")
pacman::p_load(dplyr, ggplot2, glmnet, car, corrplot)
library(pROC)
sum(is.na(data.main))
data.main<- read.csv("insurance_dataset.csv", header = T)
str(data.main)
sum(is.na(data.main))
sum(is.na(data.main))
apply(data.main, 2, function(x) any(is.na(x)))  # apply function by columns:
str(data.main)
data <- na.omit(data.main) #to omit these data
str(data)
str(data)
data <- data %>% rename(policy.output = No..of.mobile.home.policies )
str(data)
data <- data %>% mutate(policy.output = as.factor(policy.output))
str(data)
data %>%
ggplot(aes(x = policy.output)) +
geom_histogram(fill = 'blue', binwidth = 1) +
ggtitle("histogram with distribution of No. of mobile home policies")
ggplot(data,aes(x=policy.output)) + geom_bar() + labs(x="CARAVAN")
ggplot(data,aes(x=policy.output)) + geom_bar() + labs(x="No. of mobile home policies ")
knitr::opts_chunk$set(echo = TRUE,
tidy = TRUE, fig.width = 7, fig.height = 4,
fig.align='left', dev = 'pdf')
if(!require("pacman")) install.packages("pacman")
if(!require("pROC")) install.packages("pROC")
pacman::p_load(dplyr, ggplot2, glmnet, car, corrplot)
library(pROC)
ggplot(data,aes(x=policy.output)) + geom_bar() + labs(x="No. of mobile home policies ")
head(data$Customer.main.type)
data %>%
ggplot(aes(x = Customer.main.type, y = policy.output)) +
geom_point(position="jitter",alpha=0.3) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black")) +
ggtitle("EDA HISTOGRAM ") +
theme(plot.title = element_text(hjust = 0.5)) + ylab("No. of policy (output") + xlab("X = Customer main type")
data$Customer.main.type <- as.factor(data$Customer.main.type)
data$Customer.Subtype <- as.factor(data$Customer.Subtype)
data %>%
ggplot(aes(x = Customer.main.type, y = policy.output)) +
geom_point(position="jitter",alpha=0.3) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black")) +
ggtitle("EDA HISTOGRAM ") +
theme(plot.title = element_text(hjust = 0.5)) + ylab("No. of policy (output") + xlab("X = Customer main type")
plot<-ggplot(data$policy.output,aes(x=Customer.main.type))
plot<-ggplot(data,aes(x=Customer.main.type))
plot<-plot + geom_bar()
plot<-plot + labs(x="Customer Main Type")
plot
hist.table <- data[data$policy.output==1,]
plot<-ggplot(hist.table,aes(x=Customer.main.type))
plot<-plot + geom_bar()
plot<-plot + labs(x="Customer Main Type")
plot
hist.table <- data[data$policy.output==1,]
plot<-ggplot(hist.table,aes(x=reorder(Customer.main.type,Customer.main.type,function(x)-length(x))))
plot<-plot + geom_bar()
plot<-plot + labs(x="Customer Main Type")
plot
data %>%
ggplot(aes(x = Customer.main.type, y = policy.output)) +
geom_point(position="jitter",alpha=0.3) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black")) +
ggtitle("EDA HISTOGRAM ") +
fill = data$policy.output +
theme(plot.title = element_text(hjust = 0.5)) + ylab("No. of policy (output") + xlab("X = Customer main type")
data %>%
ggplot(aes(x = Customer.main.type, y = policy.output)) +
geom_point(position="jitter",alpha=0.3) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black")) +
ggtitle("EDA HISTOGRAM ")
theme(plot.title = element_text(hjust = 0.5)) + ylab("No. of policy (output") + xlab("X = Customer main type")
data %>%
ggplot(aes(x = Customer.main.type, y = policy.output)) +
geom_point(position="jitter",alpha=0.3) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black")) +
ggtitle("EDA HISTOGRAM ") +
theme(plot.title = element_text(hjust = 0.5)) + ylab("No. of policy (output") + xlab("X = Customer main type")
data %>%
ggplot(aes(x = Customer.main.type, y = policy.output, fill = policy.output)) +
geom_point(position="jitter",alpha=0.3) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black")) +
ggtitle("EDA HISTOGRAM ") +
theme(plot.title = element_text(hjust = 0.5)) + ylab("No. of policy (output") + xlab("X = Customer main type")
plot<-ggplot(data,aes(x=Customer.main.type))
plot<-plot + geom_bar()
plot<-plot + labs(x="Customer Main Type")
plot
plot<-ggplot(data,aes(x=Customer.main.type, fill= policy.output))
plot<-plot + geom_bar()
plot<-plot + labs(x="Customer Main Type")
plot
plot<-ggplot(data,aes(x=Customer.Subtype, fill= policy.output))
plot<-plot + geom_bar()
plot
head(data$Number.of.houses)
plot<-ggplot(data,aes(x=Number.of.houses, fill= policy.output))
plot<-plot + geom_bar()
plot
data$Number.of.houses = log(data$Number.of.houses)
plot<-ggplot(data,aes(x=Number.of.houses, fill= policy.output))
plot<-plot + geom_bar()
plot
head(data$Avg.size.household)
plot<-ggplot(data,aes(x=Number.of.houses, fill= policy.output))
plot<-plot + geom_bar()
plot
data.main<- read.csv("insurance_dataset.csv", header = T)
str(data.main)
#find out if dataset has missing values
sum(is.na(data.main))
#analyze which columns,rows have missing values
#it seems there are empty rows at the bottom of the dataset, so these can simply be deleted
data <- na.omit(data.main) #there are empty rows in the dataset, to omit these data
str(data)
plot<-ggplot(data,aes(x=Number.of.houses, fill= policy.output))
plot<-plot + geom_bar()
plot
#RESPONSE VARIABLE - convert the response variable to a factor and rename it to "policy.output" for convenience
data <- data %>% rename(policy.output = No..of.mobile.home.policies )
data <- data %>% mutate(policy.output = as.factor(policy.output))
ggplot(data,aes(x=policy.output)) + geom_bar() + labs(x="No. of mobile home policies ")
#There is
plot<-ggplot(data,aes(x=Number.of.houses, fill= policy.output))
plot<-plot + geom_bar()
plot
#Data
plot<-ggplot(data,aes(x=Avg.size.household, fill= policy.output))
plot<-plot + geom_bar()
plot
data$Avg.age <- as.factor(data$Avg.age)
plot<-ggplot(data,aes(x=Avg.age, fill= policy.output))
plot<-plot + geom_bar()
plot
data$Avg.age <- factor(data$Avg.age,
levels=c(1:6),
labels=c("20-30 years",
"30-40 years",
"40-50 years",
"50-60 years",
"60-70 years",
"70-80 years"))
plot<-ggplot(data,aes(x=Avg.age, fill= policy.output))
plot<-plot + geom_bar()
plot
N <- length(data$pr_num)
set.seed(10)
index.train <- sample(N, 0.8*N)
data.train <- data[index.train,] #dim(data.train)
data.test <- data[-index.train,]
dim(data.train)
dim(data.test)
str(data.train)
dim(data)
for (i in which(colnames(data)=="Roman.catholic"):which(colnames(data)=="Income..123.000")){
data[,i] <- factor(data[,i],
levels=c(0:9),
labels=c("0%",
"1-10%",
"11-23%",
"24-36%",
"37-49%",
"50-62%",
"63-75%",
"76-88%",
"89-99%",
"100%"))
}
str(data)
for (i in which(colnames(data)=="Roman.catholic"):which(colnames(data)=="No.religion")){
plot<-ggplot(data,aes(x=data[,i], fill= policy.output))
plot<-plot + geom_bar()
}
plot
for (i in which(colnames(data)=="Roman.catholic"):which(colnames(data)=="No.religion")){
plot<-ggplot(data,aes(x=data[,i], fill= policy.output), add=TRUE)
plot<-plot + geom_bar()
}
plot
str(data)
plot<-ggplot(data,aes(x=No.religion, fill= policy.output))
plot<-plot + geom_bar()
plot
for (i in which(colnames(data)=="Roman.catholic"):which(colnames(data)=="No.religion")){
plot<-ggplot(data,aes(x=data[,i], fill= policy.output), add=TRUE)
plot<-plot + geom_bar()
plot
}
for (i in which(colnames(data)=="Roman.catholic"):which(colnames(data)=="No.religion")){
data[,i]
plot<-ggplot(data,aes(x=data[,i], fill= policy.output), add=TRUE)
plot<-plot + geom_bar()
plot
}
i <- 0
i
#Variables 6-9 are religion variables, let us interpret them together
for (i in which(colnames(data)=="Roman.catholic"):which(colnames(data)=="No.religion"))
{
i=1+i
}
i
i
View (data)
i <- 0
i
for (i in which(colnames(data)=="Roman.catholic"):which(colnames(data)=="No.religion"))
{
i=1+i
}
i
i <- 0
i <- 0
i
for (i in which(colnames(data)=="Roman.catholic"):which(colnames(data)=="No.religion"))
{
i <- i + 1
}
i
i <- 0
i
for (i in which(colnames(data)=="Roman.catholic"):which(colnames(data)=="No.religion"))
{
head(data[,i])
}
vegLengths <- rbind(data$Roman.catholic, data$Protestant)
ggplot(vegLengths, aes(length, fill = colnames(vegLengths))) + geom_density(alpha = 0.2)
ggplot(vegLengths, aes(length, fill = Roman.catholic)) + geom_density(alpha = 0.2)
View(vegLengths)
carrots<- data$Roman.catholic
cukes<-data$Protestant
carrots$veg <- 'carrot'
cukes$veg <- 'cuke'
vegLengths <- rbind(carrots, cukes)
ggplot(vegLengths, aes(length, fill = veg)) + geom_density(alpha = 0.2)
ggplot(vegLengths, aes(length, fill = veg)) +
geom_histogram(alpha = 0.5, aes(y = ..density..), position = 'identity')
str(vegLengths)
str(carrots)
carrots<- data.frame(data$Roman.catholic)
str(carrots)
carrots<- data.frame(data$Roman.catholic)
cukes<-data.frame(data$Protestant)
carrots$veg <- 'carrot'
cukes$veg <- 'cuke'
vegLengths <- rbind(carrots, cukes)
plot<-ggplot(data,aes(x=Roman.catholic + No.religion, fill= policy.output))
plot<-plot + geom_bar()
plot
DF <- rbind(data.frame(fill="blue", obs=data$Roman.catholic),
data.frame(fill="green", obs=data$Protestant),
data.frame(fill="red", obs=dataset3$Other.religion),
data.frame(fill="orange", obs=dataset3$No.religion))
DF <- rbind(data.frame(fill="blue", obs=data$Roman.catholic),
data.frame(fill="green", obs=data$Protestant),
data.frame(fill="red", obs=data$Other.religion),
data.frame(fill="orange", obs=data$No.religion))
ggplot(DF, aes(x=obs, fill=fill)) +
geom_histogram(binwidth=1, colour="black", position="dodge") +
scale_fill_identity()
str(DF)
ggplot(DF, aes(x=obs, fill=fill)) +geom_bar()
ggplot(DF, aes(x=obs, fill=fill)) +geom_bar() + scale_fill_manual(breaks=1:4, values=c("blue","green","red","orange"))
DF <- rbind(data.frame(dataset="Roman catholic", obs=data$Roman.catholic),
data.frame(dataset="Protestant", obs=data$Protestant),
data.frame(dataset="Other ", obs=data$Other.religion),
data.frame(dataset="None", obs=data$No.religion))
DF$dataset <- as.factor(DF$dataset)
ggplot(DF, aes(x=obs, fill=dataset)) +geom_bar()
DF <- rbind(data.frame(dataset="Roman catholic", obs=data$Roman.catholic),
data.frame(dataset="Protestant", obs=data$Protestant),
data.frame(dataset="Other ", obs=data$Other.religion),
data.frame(dataset="None", obs=data$No.religion))
DF$dataset <- as.factor(DF$dataset)
ggplot(DF, aes(x=obs, fill=dataset)) +geom_bar() #+ scale_fill_manual(breaks=1:4, values=c("blue","green","red","orange")) +
ggtitle("histogram with distribution of Religion")
DF <- rbind(data.frame(dataset="Roman catholic", obs=data$Roman.catholic),
data.frame(dataset="Protestant", obs=data$Protestant),
data.frame(dataset="Other ", obs=data$Other.religion),
data.frame(dataset="None", obs=data$No.religion))
DF$dataset <- as.factor(DF$dataset)
ggplot(DF, aes(x=obs, fill=dataset)) +geom_bar() +
ggtitle("histogram with distribution of Religion")
#Varaibles 6-9 are all linked to religion, let us interpret them together
JUST.FOR.PLOT <- rbind(data.frame(dataset="Roman catholic", obs=data$Roman.catholic),
data.frame(dataset="Protestant", obs=data$Protestant),
data.frame(dataset="Other ", obs=data$Other.religion),
data.frame(dataset="None", obs=data$No.religion))
JUST.FOR.PLOT$dataset <- as.factor(JUST.FOR.PLOT$dataset)
ggplot(JUST.FOR.PLOT, aes(x=obs, fill=dataset)) +geom_bar() +
ggtitle("Histogram with distribution of Religion")
sum(is.na(data))
JUST.FOR.PLOT <- rbind(data.frame(dataset="Married", obs=data$Married),
data.frame(dataset="Living together", obs=data$Living.together),
data.frame(dataset="Other relation ", obs=data$Other.relation),
data.frame(dataset="Singles", obs=data$Singles))
JUST.FOR.PLOT$dataset <- as.factor(JUST.FOR.PLOT$dataset)
ggplot(JUST.FOR.PLOT, aes(x=obs, fill=dataset)) +geom_bar() +
ggtitle("Histogram with distribution of Marital status")
